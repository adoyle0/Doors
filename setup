#!/bin/bash
HEADER=$(cat <<'EOF'
:::::::-.      ...         ...    :::::::..   .::::::.
 ;;,   `';, .;;;;;;;.   .;;;;;;;. ;;;;``;;;; ;;;`    `
 `[[     [[,[[     \[[,,[[     \[[,[[[,/[[[' '[==/[[[[,
  $$,    $$$$$,     $$$$$$,     $$$$$$$$$c     '''    $
  888_,o8P'"888,_ _,88P"888,_ _,88P888b "88bo,88b    dP
  MMMMP"`    "YMMMMMP"   "YMMMMMP" MMMM   "W"  "YMmMY"

Doors are sturdier than windows.
-------------------------------------------------------
EOF)

set -e

CONFIG_DIR="$HOME"/.config
DOORS_CACHE_DIR="$HOME"/.cache/doors
GIT_URL=https://git.doordesk.net/adam/Doors.git

install_yay() {
    cd "$DOORS_CACHE_DIR"
    if [ ! "$(command -v yay)" ]; then
        if test -d yay; then
            rm -rf yay
        fi

        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si --noconfirm
        cd ../
        rm -rf yay
    fi
}

install_base_arch() {
    install_yay

    yay -S --needed --noconfirm \
        atool \
        archlinux-contrib \
        bat \
        btop \
        byobu \
        coreutils \
        fd \
        fzf \
        glow \
        go \
        man-db \
        man-pages \
        mosh \
        neovim \
        nnn \
        npm \
        oh-my-zsh-git \
        pacman-contrib \
        rate-mirrors \
        ripgrep \
        rsync \
        rubygems \
        sl \
        tar \
        tree \
        unrar \
        unzip \
        wget \
        zsh

    cargo install leptosfmt
}

install_gui_arch() {
    yay -S --needed --noconfirm \
        acpi \
        alacritty \
        arandr \
        awesome \
        bluez \
        chromium \
        gnome-themes-extra \
        librewolf-bin \
        maim \
        noto-fonts \
        noto-fonts-cjk \
        noto-fonts-emoji \
        nsxiv \
        otf-commit-mono-nerd \
        otf-font-awesome \
        picom \
        playerctl \
        polkit-gnome \
        python-pywalfox-librewolf \
        redshift \
        unclutter \
        wallust \
        xclip \
        xorg-server \
        xorg-xinit \
        xorg-xrandr \
        xwallpaper \
        zathura

    # Set librewolf as default browser
    # Unset BROWSER because xdg gets pissy if it doesn't feel like it's the authority
    unset BROWSER
    xdg-settings set default-web-browser librewolf.desktop
    # Set it anyway
    export BROWSER=librewolf

    # Init and update awesome widgets submodule
    cd "$DOORS_CACHE_DIR" &&
    git submodule init && git submodule update

    # Set up pywalfox
    if ! test -f "$HOME"/.librewolf/native-messaging-hosts/pywalfox.json; then
        pywalfox install --browser librewolf
    fi

    # Copy default wallpaper if it doesn't exist
    if ! test -f "$HOME"/Pictures/Wallpapers/door2.jpg; then
        if ! test -d "$HOME"/Pictures/Wallpapers; then
            mkdir -p "$HOME"/Pictures/Wallpapers
            curl -so "$HOME"/Pictures/Wallpapers/door2.jpg https://old.doordesk.net/door2.jpg
        fi
    fi
}

install_extras_arch() {
    yay -S --needed --noconfirm \
        discord \
        gimp \
        spotify-launcher \
        steam \
        telegram-desktop \
        thunderbird \
        walogram-git

    # Caprine depends on electon29 and it fails to build from the source it provides
    # A bin package exists so we're using it
    yay -S --needed --noconfirm electron29-bin

    # Ensure caprine comes after its dependency
    yay -S --needed --noconfirm caprine-bin
}

install_nnn_plugins() {
    sh -c "$(curl -Ls https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs)"
}

set_shell() {
    if ! [ "$SHELL" = "/bin/zsh" ]; then
        sudo chsh -s /bin/zsh "$USER"
        printf "\nLog out and back in for changes to take effect.\n"
    fi
}

setup_arch() {
    if [ "$1" -ge 1 ]; then
        install_base_arch
    fi

    if [ "$1" -ge 2 ]; then
        install_gui_arch
    fi

    if [ "$1" -ge 3 ]; then
        install_extras_arch
    fi
}

install_configs() {
    cd "$DOORS_CACHE_DIR"/configs
    for file in *
    do
        oldfile="$CONFIG_DIR"/"$file"

        if [ -e "$oldfile" ]; then
            rm -rf "$oldfile"
        fi

        cp -r "$file" "$oldfile"
    done

    if [ ! -d "$HOME/.local/bin" ]; then
        mkdir -p "$HOME/.local/bin"
    fi
}

install_bin() {
    cd "$DOORS_CACHE_DIR"
    cp -r --update=all bin "$HOME"/.local/
}

install_shell() {
    ln -sf "$HOME"/.config/shell/profile "$HOME"/.zprofile
    ln -sf "$HOME"/.config/x11/xinitrc "$HOME"/.xinitrc
}

run_setup() {
    # Detect OS and act accordingly
    . /etc/os-release
    OS=$NAME

    printf "\nSetup for %s\n\n" "$OS"

    case "$OS" in
        *Arch*)
            sudo sed '/Color/s/^#//' -i /etc/pacman.conf
            sudo pacman -S --needed --noconfirm git base-devel

            if test -d "$DOORS_CACHE_DIR"; then
                cd "$DOORS_CACHE_DIR" &&
                git pull
            else
                git clone "$GIT_URL" "$DOORS_CACHE_DIR"
            fi

            setup_arch "$1"
            ;;
        *)
            printf "$OS is not supported by this script at this time."
            exit 1
            ;;
    esac

    install_nnn_plugins
    copy_and_link
    cleanup
    set_shell
}

copy_and_link() {
    install_configs
    install_bin
    install_shell
}

cleanup() {
    rm -rf "$DOORS_CACHE_DIR"
}

clear
printf "$HEADER"

read -r -p "
Choose your adventure:

 1. Shell/CLI stuff only
 2. Above plus basic GUI
 3. Above plus extras like steam, messengers (bloat)
 4. Cleanup old Doors files (before May 21 2025)

Enter number: " input

clear
printf "$HEADER"

if ! [ "$input" -eq "$input" ] 2> /dev/null; then
    printf "Error: Not a number"
    exit 1
elif [ "$input" -lt 1 ] || [ "$input" -gt 4 ]; then
    printf "Error: Input out of range"
    exit 1
fi

if [ "$input" -eq 4 ]; then
    rm -rf "$HOME"/.doors
    rm -rf "$HOME"/*~
    rm -rf "$HOME"/.config/*~
    rm -rf "$HOME"/.local/bin/*~
    exit 0
fi

run_setup "$input"

exit 0
